/** Implements a graphical Truck. */
class Truck {

    field int x, y; // screen location of the Truck's top-left corner
    field int angle; // 0, 90, 180, 270

    /** Constructs a new Truck with a given location*/
    constructor Truck new(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        let angle = 0;
        do draw();
        return this;
    }

    /** Disposes this Truck */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    // address = 32 * y + x / 16
    // value = Memory.peek[16384 + address]
    // set the (x % 16)th bit of value to 0 or 1
    // do Memory.poke(address,value)
    /** Calculate the location using x and y*/
    method int getLocation() {
        var int location;
        let location = (32 * y) + (x / 16);
        return location;
    }

    method void draw() {
        if(angle = 0) {
            do draw0();
        }
        if(angle = 90) {
            do draw90();
        }
        if(angle = 180) {
            do draw180();
        }
        if(angle = 270) {
            do draw270();
        }
        return;
    }

    /** Draws this Truck on the screen 512x256*/ 
    method void draw0() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 16380);
        do Memory.poke(memAddress + 32, 16380);
        do Memory.poke(memAddress + 64, 32766);
        do Memory.poke(memAddress + 96, -16387);
        do Memory.poke(memAddress + 128, -16387);
        do Memory.poke(memAddress + 160, 28686);
        do Memory.poke(memAddress + 192, 29070);
        do Memory.poke(memAddress + 224, 32766);
        do Memory.poke(memAddress + 256, 32766);
        do Memory.poke(memAddress + 288, -1);
        do Memory.poke(memAddress + 320, -24583);
        do Memory.poke(memAddress + 352, -961);
        do Memory.poke(memAddress + 384, 32766);
        do Memory.poke(memAddress + 416, 32766);
        do Memory.poke(memAddress + 448, 24582);
        do Memory.poke(memAddress + 480, 24582);
        return;
    }

    method void draw90() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 6256);
        do Memory.poke(memAddress + 32, 10207);
        do Memory.poke(memAddress + 64, -33);
        do Memory.poke(memAddress + 96, -4);
        do Memory.poke(memAddress + 128, -1540);
        do Memory.poke(memAddress + 160, -1540);
        do Memory.poke(memAddress + 192, -1556);
        do Memory.poke(memAddress + 224, -1044);
        do Memory.poke(memAddress + 256, -1044);
        do Memory.poke(memAddress + 288, -1556);
        do Memory.poke(memAddress + 320, -1540);
        do Memory.poke(memAddress + 352, -1540);
        do Memory.poke(memAddress + 384, -4);
        do Memory.poke(memAddress + 416, -33);
        do Memory.poke(memAddress + 448, 10207);
        do Memory.poke(memAddress + 480, 6256);
        return;
    }

    method void draw180() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 24582);
        do Memory.poke(memAddress + 32, 24582);
        do Memory.poke(memAddress + 64, 32766);
        do Memory.poke(memAddress + 96, 32766);
        do Memory.poke(memAddress + 128, -961);
        do Memory.poke(memAddress + 160, -24583);
        do Memory.poke(memAddress + 192, -1);
        do Memory.poke(memAddress + 224, 32766);
        do Memory.poke(memAddress + 256, 32766);
        do Memory.poke(memAddress + 288, 29070);
        do Memory.poke(memAddress + 320, 28686);
        do Memory.poke(memAddress + 352, -16387);
        do Memory.poke(memAddress + 384, -16387);
        do Memory.poke(memAddress + 416, 32766);
        do Memory.poke(memAddress + 448, 16380);
        do Memory.poke(memAddress + 480, 16380);
        return;
    }

    method void draw270() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 3608);
        do Memory.poke(memAddress + 32, -1052);
        do Memory.poke(memAddress + 64, -1025);
        do Memory.poke(memAddress + 96, 16383);
        do Memory.poke(memAddress + 128, 16287);
        do Memory.poke(memAddress + 160, 16287);
        do Memory.poke(memAddress + 192, 14239);
        do Memory.poke(memAddress + 224, 14303);
        do Memory.poke(memAddress + 256, 14303);
        do Memory.poke(memAddress + 288, 14239);
        do Memory.poke(memAddress + 320, 16287);
        do Memory.poke(memAddress + 352, 16287);
        do Memory.poke(memAddress + 384, 16383);
        do Memory.poke(memAddress + 416, -1025);
        do Memory.poke(memAddress + 448, -1052);
        do Memory.poke(memAddress + 480, 3608);
        return;
    }
    
    /** Erases this Truck from the screen */
    method void erase() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }

    /** Rotate the Truck 90 angles */
    method void rotate() {
        do erase();
        let angle = angle + 90;
        if(angle = 360) {
            let angle = 0;
        }
        do draw();
        return;
    }

    /** Moves this Truck up by 2 pixels */
    method void moveUp() {
        if (y > 1) {
            do erase();
            let y = y - 2;
            do draw();
        }
        return;
    }

    /** Moves this Truck down by 2 pixels */
    method void moveDown() {
        if (240 > y) {
            do erase();
            let y = y + 2;
            do draw();
        }
        return;
    }

    /** Moves this Truck left by 2 pixels */
    method void moveLeft() {
        if (x > 1) {
            do erase();
            let x = x - 2;
            do draw();
        }
        return;
    }

    /** Moves this Truck right by 2 pixels */
    method void moveRight() {
        if (x < 496) {
            do erase();
            let x = x + 2;
            do draw();
        }
        return;
    }
}