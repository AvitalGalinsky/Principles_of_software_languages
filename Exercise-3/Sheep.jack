class Sheep {
    
    field int x, y; // screen location of the Sheep's top-left corner
    field int angle; // 0, 90, 180, 270

    /** Constructs a new Sheep with a given location */
    constructor Sheep new(int Ax, int Ay) {
        let x = Ax;
        let y = Ay;
        let angle = 0;
        do draw();
        return this;
    }

    /** Disposes this Sheep */
    method void dispose() {
        do Memory.deAlloc(this);
        return;
    }

    // address = 32 * y + x / 16
    // value = Memory.peek[16384 + address]
    // set the (x % 16)th bit of value to 0 or 1
    // do Memory.poke(address,value)
    /** Calculate the location using x and y */
    method int getLocation() {
        var int location;
        let location = (32 * y) + (x / 16);
        return location;
    }

    method void draw() {
        if(angle = 0) {
            do draw0();
        }
        if(angle = 90) {
            do draw90();
        }
        if(angle = 180) {
            do draw180();
        }
        if(angle = 270) {
            do draw270();
        }
        return;
    }

    /** Draws this Sheep on the screen */
    method void draw0() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 0);
        do Memory.poke(memAddress + 32, 4064);
        do Memory.poke(memAddress + 64, 4112);
        do Memory.poke(memAddress + 96, 8200);
        do Memory.poke(memAddress + 128, 18372);
        do Memory.poke(memAddress + 160, -25230);
        do Memory.poke(memAddress + 192, -30782);
        do Memory.poke(memAddress + 224, -30782);
        do Memory.poke(memAddress + 256, -30782);
        do Memory.poke(memAddress + 288, 17284);
        do Memory.poke(memAddress + 320, 16388);
        do Memory.poke(memAddress + 352, 12312); 
        do Memory.poke(memAddress + 384, 3168);
        do Memory.poke(memAddress + 416, 1344);
        do Memory.poke(memAddress + 448, 1344);
        do Memory.poke(memAddress + 480, 1984);
        return;
    }

    method void draw90() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 0);
        do Memory.poke(memAddress + 32, 1920);
        do Memory.poke(memAddress + 64, 2144);
        do Memory.poke(memAddress + 96, 4112);
        do Memory.poke(memAddress + 128, 9232);
        do Memory.poke(memAddress + 160, 17416);
        do Memory.poke(memAddress + 192, 20367);
        do Memory.poke(memAddress + 224, 19393);
        do Memory.poke(memAddress + 256, 20423);
        do Memory.poke(memAddress + 288, 19393);
        do Memory.poke(memAddress + 320, 20367);
        do Memory.poke(memAddress + 352, 17416);
        do Memory.poke(memAddress + 384, 9232);
        do Memory.poke(memAddress + 416, 4112);
        do Memory.poke(memAddress + 448, 2144);
        do Memory.poke(memAddress + 480, 1920);
        return;
    }

    method void draw180() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 992);
        do Memory.poke(memAddress + 32, 672);
        do Memory.poke(memAddress + 64, 672);
        do Memory.poke(memAddress + 96, 1584);
        do Memory.poke(memAddress + 128, 6156);
        do Memory.poke(memAddress + 160, 8194);
        do Memory.poke(memAddress + 192, 8642);
        do Memory.poke(memAddress + 224, 17377);
        do Memory.poke(memAddress + 256, 17377);
        do Memory.poke(memAddress + 288, 17377);
        do Memory.poke(memAddress + 320, 20153);
        do Memory.poke(memAddress + 352, 9186);
        do Memory.poke(memAddress + 384, 4100);
        do Memory.poke(memAddress + 416, 2056);
        do Memory.poke(memAddress + 448, 2032);
        do Memory.poke(memAddress + 480, 0);
        return;
    }

    method void draw270() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 480);
        do Memory.poke(memAddress + 32, 1552);
        do Memory.poke(memAddress + 64, 2056);
        do Memory.poke(memAddress + 96, 2084);
        do Memory.poke(memAddress + 128, 4130);
        do Memory.poke(memAddress + 160, -3598);
        do Memory.poke(memAddress + 192, -31790);
        do Memory.poke(memAddress + 224, -7182);
        do Memory.poke(memAddress + 256, -31790);
        do Memory.poke(memAddress + 288, -3598);
        do Memory.poke(memAddress + 320, 4130);
        do Memory.poke(memAddress + 352, 2084);
        do Memory.poke(memAddress + 384, 2056);
        do Memory.poke(memAddress + 416, 1552);
        do Memory.poke(memAddress + 448, 480);
        do Memory.poke(memAddress + 480, 0);
        return;
    }

    /** Erases this Sheep from the screen */
    method void erase() {
        var int memAddress;
        let memAddress = 16384 + getLocation();
        do Memory.poke(memAddress + 0, 0);
        do Memory.poke(memAddress + 32, 0);
        do Memory.poke(memAddress + 64, 0);
        do Memory.poke(memAddress + 96, 0);
        do Memory.poke(memAddress + 128, 0);
        do Memory.poke(memAddress + 160, 0);
        do Memory.poke(memAddress + 192, 0);
        do Memory.poke(memAddress + 224, 0);
        do Memory.poke(memAddress + 256, 0);
        do Memory.poke(memAddress + 288, 0);
        do Memory.poke(memAddress + 320, 0);
        do Memory.poke(memAddress + 352, 0);
        do Memory.poke(memAddress + 384, 0);
        do Memory.poke(memAddress + 416, 0);
        do Memory.poke(memAddress + 448, 0);
        do Memory.poke(memAddress + 480, 0);
        return;
    }

    /** Rotate the Sheep 90 angles */
    method void rotate() {
        do erase();
        let angle = angle + 90;
        if(angle = 360) {
            let angle = 0;
        }
        do draw();
        return;
    }

    /** Moves this Sheep up by 2 pixels */
    method void moveUp() {
        if (y > 1) {
            do erase();
            let y = y - 2;
            do draw();
        }
        return;
    }

    /** Moves this Sheep down by 2 pixels */
    method void moveDown() {
        if (240 > y) {
            do erase();
            let y = y + 2;
            do draw();
        }
        return;
    }

    /** Moves this Sheep left by 2 pixels */
    method void moveLeft() {
        if (x > 1) {
            do erase();
            let x = x - 2;
            do draw();
        }
        return;
    }

    /** Moves this Sheep right by 2 pixels */
    method void moveRight() {
        if (x < 496) {
            do erase();
            let x = x + 2;
            do draw();
        }
        return;
    }

}